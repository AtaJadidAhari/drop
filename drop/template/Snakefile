from pathlib import Path
import re
import drop
from drop.utils import getRuleFromPath

drop.installRPackages()
configfile: "config.yaml"

projectDir = Path.cwd().resolve()
_, projectPaths = drop.setupPaths(projectDir)
tmp_dir = projectPaths["tmpDir"]

cfg = drop.config.DropConfig(config)
sa = cfg.sampleAnnotation
config = cfg.config # legacy

include: drop.utils.getWBuildSnakefile()
include: cfg.AE.getWorkdir() + "/Snakefile"
include: cfg.AS.getWorkdir() + "/Snakefile"
include: cfg.MAE.getWorkdir() + "/Snakefile"

rule all:
    input: 
        rules.aberrantExpression.input,
        rules.Index.output,
        config["htmlOutputPath"] + "/readme.html",
        rulegraph = tmp_dir / "rulegraphs.done"
    shell:
        """
        rm {input.rulegraph}
        """

rule sampleAnnotation:
    input: cfg.getProcessedDataDir() + "/sample_anno/sample_anno.done"

rule exportCounts:
    input:
        cfg.getExportCountFiles("geneCounts"),
        cfg.getExportCountFiles("splitCounts"),
        cfg.getExportCountFiles("spliceSiteOverlapCounts"),
        cfg.getProcessedResultsDir() + "/exported_counts/sample_anno.done"

rule dependencyGraph:
    input:
        rules.aberrantExpression_rulegraph.output,
        rules.aberrantSplicing_rulegraph.output,
        rules.mae_rulegraph.output
    output:
        touch(tmp_dir / "rulegraphs.done")

rule publish_local:
    shell: "rsync -Ort {config[htmlOutputPath]} {config[webDir]}"
